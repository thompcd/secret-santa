{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../src/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { fly } from 'svelte/transition';\n\timport { quintOut } from 'svelte/easing';\n\timport { crossfade } from 'svelte/transition';\n\timport { flip } from 'svelte/animate';\n\t\n\tlet initialOrder = [\n\t\t{ id: 1, name: 'Corey' },\n\t\t{ id: 2, name: 'Jessica' },\n\t\t{ id: 3, name: 'Bob' },\n\t\t{ id: 4, name: 'Carin' },\n\t\t{ id: 5, name: 'Tony' },\n\t\t{ id: 6, name: 'BJ' },\n\t\t{ id: 7, name: 'Brandon' },\n\t\t{ id: 8, name: 'Sierra' },\n\t\t{ id: 9, name: 'Trin' },\n\t\t{ id: 10, name: 'Brian' },\n\t\t{ id: 11, name: 'Katie' },\n\t\t{ id: 12, name: 'Hannah' },\n\t];\n\t\n\t$: partners = [\n\t\n];\n\n\t//handle all of the app logic in the click function, like the animal I am\n\tconst handleClick = function(){\n\t\t//order will be empty the first time or match previous shuffle\n\t\tpartners = initialOrder;\n\t\t\n\t\t//to make things dramatic, we want to redo the shuffle until no elements match their original position rather than optimizing the algorithm\n\t\tdo {\n\t\t\tpartners = shuffle(partners)\n\t\t} while (hasOriginalPosition(initialOrder, partners));\n\t}\n\t\n\t//arrays must match in length to be valid\n\t//check the shuffled version of the array versus non-shuffled\n\tfunction hasOriginalPosition(array1,array2){\n\t\tfor(let i = array1.length-1; i>0; i--){\n\t\t\tif (array1[i].id === array2[i].id){\n\t\t\t\t//the id in the corresponding slot is the same - not a good shuffle\n\t\t\t\treturn true;\n\t\t\t}\n\t}\n\t\treturn false;\n\t}\n\n// return new randomly sorted array from shuffle function\nfunction shuffle(array) {\n  return [...array].sort(() => 0.5 - Math.random());\n}\n\n//ooooh, pretty animations\nconst [send, receive] = crossfade({\n\t\tfallback(node, params) {\n\t\t\tconst style = getComputedStyle(node);\n\t\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\n\t\t\treturn {\n\t\t\t\tduration: 500,\n\t\t\t\teasing: quintOut,\n\t\t\t\tcss: t => `\n\t\t\t\t\ttransform: ${transform} scale(${t});\n\t\t\t\t\topacity: ${t}\n\t\t\t\t`\n\t\t\t};\n\t\t}\n\t});\n</script>\n\n<div class=\"background\">\n\t<div class=\"board\">\n\t\t<div class=\"button-container\">\n\t\t\t<div class=\"button-wrapper\">\n\t\t\t\t<button class=\"repeating-linear\" on:click={handleClick}>Shuffle</button>\n\t\t\t\t<span class=\"subtext\">\n\t\t\t\t\tClick button to assign new secret santas\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"left\">\n\t\t\t<h2>\n\t\t\t\tParticipant\n\t\t\t</h2>\n\t\t\t{#each initialOrder as person}\n\t\t\t\t<p>\n\t\t\t\t{person.name}\n\t\t\t\t</p>\n\t\t\t{/each}\n\t\t</div>\n\t\t<div class=\"right\">\n\t\t\t<h2>\n\t\t\t\tSecret Santa\n\t\t\t</h2>\n\t\t\t<span class=\"placeholder\">\n\t\t\t{#each partners as person (person.id)}\n\t\t\t\t<p \n\t\t\t\tin:receive=\"{{key: person.id}}\"\n\t\t\t\tout:send=\"{{key: person.id}}\" \n\t\t\t\tanimate:flip >\n\t\t\t\t{person.name}\n\t\t\t\t</p>\n\t\t\t{/each}\n\t\t\t\t</span>\n\t\t</div>\n\t</div>\n</div>\n\n\n<style>\n\t.background{\n\t\theight: 100vh;\n\t\tdisplay: flex;\n\t\tflex-align: center;\n\t\tbackground: #C0392B;\n\t\tbackground: repeating-linear-gradient(\n\t\t45deg,\n\t\t#E74C3C,\n\t\t#E74C3C 10px,\n\t\t#C0392B 10px,\n\t\t#C0392B 20px);\n\n\t}\n\t\n\t.board {\n\t\tmax-width: 36em;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tmargin: auto auto;\n\t\tpadding: 2rem;\n\t}\n\t\n\t.left, .right {\n\t\tfloat: left;\n\t\tmin-width: 100px;\n\t\tmax-width: 300px;\n\t\twidth: 50%;\n\t\theight: 70vh;\n\t\tbackground-color: white;\n\t}\n\t\n\t.button-container{\n\t\tpadding-top: 2rem;\n\t\twidth: 100%;\n\t\tbackground-color: white;\n\t}\n\t.button-wrapper{\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tpadding: 1rem;\n\t\tpadding-bottom: 0;\n\t}\n\tbutton {\n\t\tmargin: auto;\n\t\twidth: 200px;\n\t\theight: 80px;\n\t\tborder: 3px solid #235E6F;\n\t\tfont-weight: bold;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 1.3rem;\n\t\tbackground-color: #34A65F;\n\t\tcolor: white;\n\t}\n\tbutton:hover{\n\t\tbackground-color: #F5624D;\n\t}\n\tbutton:active{\n\t\tbackground-color: #235E6F;\n\t}\n\t\n\th2 {\n\t\tfont-size: 2em;\n\t\tfont-weight: 200;\n\t\tuser-select: none;\n\t\tcolor: #0F8A5F;\n\t\ttext-align: center;\n\t}\n\tp{\n\t\ttext-align: center;\n\t\tfont-size: 1.1em;\n\t}\n\t.subtext{\n\t\tpadding-top: 1rem;\n\t\ttext-align: center;\n\t\tfont-weight: 300;\n\t}\n\t\n</style>\n"
  ],
  "names": [],
  "mappings": "AAgHC,yBAAW,CAAC,AACX,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE;EACZ,KAAK,CAAC;EACN,OAAO,CAAC;EACR,OAAO,CAAC,IAAI,CAAC;EACb,OAAO,CAAC,IAAI,CAAC;EACb,OAAO,CAAC,IAAI,CAAC,AAEd,CAAC,AAED,MAAM,cAAC,CAAC,AACP,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,OAAO,CAAE,IAAI,AACd,CAAC,AAED,mBAAK,CAAE,MAAM,cAAC,CAAC,AACd,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,KAAK,AACxB,CAAC,AAED,+BAAiB,CAAC,AACjB,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,KAAK,AACxB,CAAC,AACD,6BAAe,CAAC,AACf,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,CAAC,AAClB,CAAC,AACD,MAAM,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,MAAM,CACjB,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,AACb,CAAC,AACD,oBAAM,MAAM,CAAC,AACZ,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AACD,oBAAM,OAAO,CAAC,AACb,gBAAgB,CAAE,OAAO,AAC1B,CAAC,AAED,EAAE,cAAC,CAAC,AACH,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,MAAM,AACnB,CAAC,AACD,eAAC,CAAC,AACD,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,KAAK,AACjB,CAAC,AACD,sBAAQ,CAAC,AACR,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,GAAG,AACjB,CAAC"
}